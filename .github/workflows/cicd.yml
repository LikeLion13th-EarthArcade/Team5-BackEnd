name: Deploy to AWS EC2 using Docker

on:
  push:
    branches: [ develop2 ]

env:
  IMAGE_NAME: tjgustjr/artie
  EC2_HOST: ${{ secrets.EC2_URL }}
  EC2_SSH_USER: ec2-user
  EC2_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle (skip tests)
        run: ./gradlew build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push (latest)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest

  deploy-to-ec2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (A) GitHub Secret ENV → .env 로 생성 (로컬)
      - name: Create .env from GitHub Secret (multiline)
        shell: bash
        run: |
          printf "%s" "${{ secrets.ENV }}" > .env

      # (B) 원격에 secrets 디렉터리 보장
      - name: Prepare secrets dir on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            mkdir -p ~/secrets
            sudo chown -R $USER:$USER ~/secrets

      # (C) .env 업로드
      - name: Upload .env to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.EC2_KEY }}
          source: ".env"
          target: "~/secrets"

      # (D) docker-compose.yml 업로드
      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.EC2_KEY }}
          source: "docker-compose.yml"
          target: "~"

      # (E) EC2에서 배포
      - name: Deploy to EC2 using Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            cd ~
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
            sudo docker compose pull
            sudo docker compose up -d --remove-orphans
            sudo docker image prune -f
